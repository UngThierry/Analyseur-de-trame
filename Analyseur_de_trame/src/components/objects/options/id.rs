pub fn get_ethernet_type(ether_type: u16) -> &'static str {
    match ether_type {
        0x0000..=0x05DC => "IEEE802.3 Length Field",
        0x0600 => "XEROX NS IDP",
        0x0660 => "DLOG",
        0x0661 => "DLOG",
        0x0800 => "Internet Protocol version 4 (IPv4)",
        0x0801 => "X.75 Internet",
        0x0802 => "NBS Internet",
        0x0803 => "ECMA Internet",
        0x0804 => "Chaosnet",
        0x0805 => "X.25 Level 3",
        0x0806 => "Address Resolution Protocol (ARP)",
        0x0807 => "XNS Compatability",
        0x0808 => "Frame Relay ARP",
        0x081C => "Symbolics Private",
        0x0888..=0x088A => "Xyplex",
        0x0900 => "Ungermann-Bass net debugr",
        0x0A00 => "Xerox IEEE802.3 PUP",
        0x0A01 => "PUP Addr Trans",
        0x0BAD => "Banyan VINES",
        0x0BAE => "VINES Loopback",
        0x0BAF => "VINES Echo",
        0x1000 => "Berkeley Trailer nego",
        0x1001..=0x100F => "Berkeley Trailer encap/IP",
        0x1600 => "Valid Systems",
        0x22F3 => "TRILL",
        0x22F4 => "L2-IS-IS",
        0x4242 => "PCS Basic Block Protocol",
        0x5208 => "BBN Simnet",
        0x6000 => "DEC Unassigned (Exp.)",
        0x6001 => "DEC MOP Dump/Load",
        0x6002 => "DEC MOP Remote Console",
        0x6003 => "DEC DECNET Phase IV Route",
        0x6004 => "DEC LAT",
        0x6005 => "DEC Diagnostic Protocol",
        0x6006 => "DEC Customer Protocol",
        0x6007 => "DEC LAVC, SCA",
        0x6008..=0x6009 => "DEC Unassigned",
        0x6010..=0x6014 => "3Com Corporation",
        0x6558 => "Trans Ether Bridging",
        0x6559 => "Raw Frame Relay",
        0x7000 => "Ungermann-Bass download",
        0x7002 => "Ungermann-Bass dia/loop",
        0x7020..=0x7029 => "LRT",
        0x7030 => "Proteon",
        0x7034 => "Cabletron",
        0x8003 => "Cronus VLN",
        0x8004 => "Cronus Direct",
        0x8005 => "HP Probe",
        0x8006 => "Nestar",
        0x8008 => "AT&T",
        0x8010 => "Excelan",
        0x8013 => "SGI diagnostics",
        0x8014 => "SGI network games",
        0x8015 => "SGI reserved",
        0x8016 => "SGI bounce server",
        0x8019 => "Apollo Domain",
        0x802E => "Tymshare",
        0x802F => "Tigan, Inc.",
        0x8035 => "Reverse Address Resolution Protocol (RARP)",
        0x8036 => "Aeonic Systems",
        0x8038 => "DEC LANBridge",
        0x8039..=0x803C => "DEC Unassigned",
        0x803D => "DEC Ethernet Encryption",
        0x803E => "DEC Unassigned",
        0x803F => "DEC LAN Traffic Monitor",
        0x8040..=0x8042 => "DEC Unassigned",
        0x8044 => "Planning Research Corp.",
        0x8046 => "AT&T",
        0x8047 => "AT&T",
        0x8049 => "ExperData",
        0x805B => "Stanford V Kernel exp.",
        0x805C => "Stanford V Kernel prod.",
        0x805D => "Evans & Sutherland",
        0x8060 => "Little Machines",
        0x8062 => "Counterpoint Computers",
        0x8065 => "Univ. of Mass. @ Amherst",
        0x8066 => "Univ. of Mass. @ Amherst",
        0x8067 => "Veeco Integrated Auto.",
        0x8068 => "General Dynamics",
        0x8069 => "AT&T",
        0x806A => "Autophon",
        0x806C => "ComDesign",
        0x806D => "Computgraphic Corp.",
        0x806E..=0x8077 => "Landmark Graphics Corp.",
        0x807A => "Matra",
        0x807B => "Dansk Data Elektronik",
        0x807C => "Merit Internodal",
        0x807D..=0x807F => "Vitalink Communications",
        0x8080 => "Vitalink TransLAN III",
        0x8081..=0x8083 => "Counterpoint Computers",
        0x809B => "Appletalk",
        0x809C..=0x809E => "Datability",
        0x809F => "Spider Systems Ltd.",
        0x80A3 => "Nixdorf Computers",
        0x80A4..=0x80B3 => "Siemens Gammasonics Inc.",
        0x80C0..=0x80C3 => "DCA Data Exchange Cluster",
        0x80C4 => "Banyan Systems",
        0x80C5 => "Banyan Systems",
        0x80C6 => "Pacer Software",
        0x80C7 => "Applitek Corporation",
        0x80C8..=0x80CC => "Intergraph Corporation",
        0x80CD..=0x80CE => "Harris Corporation",
        0x80CF..=0x80D2 => "Taylor Instrument",
        0x80D3..=0x80D4 => "Rosemount Corporation",
        0x80D5 => "IBM SNA Service on Ether",
        0x80DD => "Varian Associates",
        0x80DE..=0x80DF => "Integrated Solutions TRFS",
        0x80E0..=0x80E3 => "Allen-Bradley",
        0x80E4..=0x80F0 => "Datability",
        0x80F2 => "Retix",
        0x80F3 => "AppleTalk AARP (Kinetics)",
        0x80F4..=0x80F5 => "Kinetics",
        0x80F7 => "Apollo Computer",
        0x80FF => "Wellfleet Communications",
        0x8100 => "Customer VLAN Tag Type (C-Tag, formerly called the Q-Tag) (initially Wellfleet)",
        0x8101..=0x8103 => "Wellfleet Communications",
        0x8107..=0x8109 => "Symbolics Private",
        0x8130 => "Hayes Microcomputers",
        0x8131 => "VG Laboratory Systems",
        0x8132..=0x8136 => "Bridge Communications",
        0x8137..=0x8138 => "Novell, Inc.",
        0x8139..=0x813D => "KTI",
        0x8148 => "Logicraft",
        0x8149 => "Network Computing Devices",
        0x814A => "Alpha Micro",
        0x814C => "SNMP",
        0x814D => "BIIN",
        0x814E => "BIIN",
        0x814F => "Technically Elite Concept",
        0x8150 => "Rational Corp",
        0x8151..=0x8153 => "Qualcomm",
        0x815C..=0x815E => "Computer Protocol Pty Ltd",
        0x8164..=0x8166 => "Charles River Data System",
        0x817D => "XTP",
        0x817E => "SGI/Time Warner prop.",
        0x8180 => "HIPPI-FP encapsulation",
        0x8181 => "STP, HIPPI-ST",
        0x8182 => "Reserved for HIPPI-6400",
        0x8183 => "Reserved for HIPPI-6400",
        0x8184..=0x818C => "Silicon Graphics prop.",
        0x818D => "Motorola Computer",
        0x819A..=0x81A3 => "Qualcomm",
        0x81A4 => "ARAI Bunkichi",
        0x81A5..=0x81AE => "RAD Network Devices",
        0x81B7..=0x81B9 => "Xyplex",
        0x81CC..=0x81D5 => "Apricot Computers",
        0x81D6..=0x81DD => "Artisoft",
        0x81E6..=0x81EF => "Polygon",
        0x81F0..=0x81F2 => "Comsat Labs",
        0x81F3..=0x81F5 => "SAIC",
        0x81F6..=0x81F8 => "VG Analytical",
        0x8203..=0x8205 => "Quantum Software",
        0x8221..=0x8222 => "Ascom Banking Systems",
        0x823E..=0x8240 => "Advanced Encryption Syste",
        0x827F..=0x8282 => "Athena Programming",
        0x8263..=0x826A => "Charles River Data System",
        0x829A..=0x829B => "Inst Ind Info Tech",
        0x829C..=0x82AB => "Taurus Controls",
        0x82AC..=0x8693 => "Walker Richer & Quinn",
        0x8694..=0x869D => "Idea Courier",
        0x869E..=0x86A1 => "Computer Network Tech",
        0x86A3..=0x86AC => "Gateway Communications",
        0x86DB => "SECTRA",
        0x86DE => "Delta Controls",
        0x86DD => "Internet Protocol version 6 (IPv6)",
        0x86DF => "ATOMIC",
        0x86E0..=0x86EF => "Landis & Gyr Powers",
        0x8700..=0x8710 => "Motorola",
        0x876B => "TCP/IP Compression",
        0x876C => "IP Autonomous Systems",
        0x876D => "Secure Data",
        0x8808 => "IEEE Std 802.3 - Ethernet Passive Optical Network (EPON)",
        0x880B => "Point-to-Point Protocol (PPP)",
        0x880C => "General Switch Management Protocol (GSMP)",
        0x8847 => "MPLS",
        0x8848 => "MPLS with upstream-assigned label",
        0x8861 => "Multicast Channel Allocation Protocol (MCAP)",
        0x8863 => "PPP over Ethernet (PPPoE) Discovery Stage",
        0x8864 => "PPP over Ethernet (PPPoE) Session Stage",
        0x888E => "IEEE Std 802.1X - Port-based network access control",
        0x88A8 => "IEEE Std 802.1Q - Service VLAN tag identifier (S-Tag)",
        0x8A96..=0x8A97 => "Invisible Software",
        0x88B5 => "IEEE Std 802 - Local Experimental Ethertype",
        0x88B6 => "IEEE Std 802 - Local Experimental Ethertype",
        0x88B7 => "IEEE Std 802 - OUI Extended Ethertype",
        0x88C7 => "IEEE Std 802.11 - Pre-Authentication (802.11i)",
        0x88CC => "IEEE Std 802.1AB - Link Layer Discovery Protocol (LLDP)",
        0x88E5 => "IEEE Std 802.1AE - Media Access Control Security",
        0x88E7 => "Provider Backbone Bridging Instance tag",
        0x88F5 => "IEEE Std 802.1Q  - Multiple VLAN Registration Protocol (MVRP)",
        0x88F6 => "IEEE Std 802.1Q - Multiple Multicast Registration Protocol (MMRP)",
        0x890D => "IEEE Std 802.11 - Fast Roaming Remote Request (802.11r)",
        0x8917 => "IEEE Std 802.21 - Media Independent Handover Protocol",
        0x8929 => "IEEE Std 802.1Qbe - Multiple I-SID Registration Protocol",
        0x893B => "TRILL Fine Grained Labeling (FGL)",
        0x8940 => "IEEE Std 802.1Qbg - ECP Protocol (also used in 802.1BR)",
        0x8946 => "TRILL RBridge Channel",
        0x8947 => "GeoNetworking as defined in ETSI EN 302 636-4-1",
        0x894F => "NSH (Network Service Header)",
        0x9000 => "Loopback",
        0x9001 => "3Com(Bridge) XNS Sys Mgmt",
        0x9002 => "3Com(Bridge) TCP-IP Sys",
        0x9003 => "3Com(Bridge) loop detect",
        0x9A22 => "Multi-Topology",
        0xA0ED => "LoWPAN encapsulation",
        0xB7EA => "The Ethertype will be used to identify a \"Channel\" in which control messages are encapsulated as payload of GRE packets. When a GRE packet tagged with the Ethertype is received, the payload will be handed to the network processor for processing.",
        0xFF00 => "BBN VITAL-LanBridge cache",
        0xFF01..=0xFF0F => "ISC Bunker Ramo",
        0xFFFF => "Reserved",
        _ => "Unknown_Protocol",
    }
}


pub fn is_ip_option_correct(ip_type: u8) -> Result<(), (u8, u8, u8, u8)> {
    let (copy, class, id) = (ip_type >> 7, (ip_type >> 5) & 0b11, ip_type & 0b1_1111);
    match id {
        0 | 1 | 7 | 10 | 11 | 12 | 15 | 25 => {
            if copy == 0 && class == 0 {
                Ok(())
            } else {
                Err((0, 0, copy, class))
            }
        }
        2 | 3 | 5 | 6 | 8 | 9 | 14 | 16 | 17 | 19 | 20 | 21 | 22 | 23 | 24 => {
            if copy == 1 && class == 0 {
                Ok(())
            } else {
                Err((1, 0, copy, class))
            }
        }
        4 | 18 => {
            if copy == 0 && class == 2 {
                Ok(())
            } else {
                Err((0, 2, copy, class))
            }
        }
        13 => {
            if copy == 1 && class == 2 {
                Ok(())
            } else {
                Err((1, 2, copy, class))
            }
        }
        _ => Err((0, 0, 0, 0)),
    }
}

pub fn get_ip_description(option: &super::IpOption) -> &'static str {
    use super::IpOption::*;
    match option {
        EOOL => "End of Options List",
        NOP => "No Operation",
        UntrackedOption(option_type, _) => {
            match option_type.0 & 0b1_1111 {
                2  => "Security",
                3  => "Loose Source Route",
                4  => "Time Stamp",
                5  => "Extended Security",
                6  => "Commercial Security",
                7  => "Record Route",
                8  => "Stream ID",
                9  => "Strict Source Route",
                10 => "Experimental Measurement",
                11 => "MTU Probe",
                12 => "MTU Reply",
                13 => "Experimental Flow Control",
                14 => "Experimental Access Control",
                15 => "???",
                16 => "IMI Traffic Descriptor",
                17 => "Extended Internet Protocol",
                18 => "Traceroute",
                19 => "Address Extension",
                20 => "Router Alert",
                21 => "Selective Directed Broadcast",
                22 => "NSAP Addresses",
                23 => "Dynamic Packet State",
                24 => "Upstream Multicast Packet.",
                25 => "Quick-Start",
                _ => unreachable!(),
            }
        },
    }
}



pub fn get_ip_protocol_description(protocol_id: u8) -> &'static str {
    match protocol_id {
        0 => "IPv6 Hop-by-Hop Option",
        1 => "ICMP, Internet Control Message Protocol",
        2 => "IGMP, Internet Group Management Protocol",
        3 => "GGP, Gateway to Gateway Protocol",
        4 => "IP in IP encapsulation",
        5 => "ST, Internet Stream Protocol",
        6 => "TCP, Transmission Control Protocol",
        7 => "UCL, CBT",
        8 => "EGP, Exterior Gateway Protocol",
        9 => "IGRP",
        10 => "BBN RCC Monitoring",
        11 => "NVP, Network Voice Protocol",
        12 => "PUP",
        13 => "ARGUS",
        14 => "EMCON, Emission Control Protocol",
        15 => "XNET, Cross Net Debugger",
        16 => "Chaos",
        17 => "UDP, User Datagram Protocol",
        18 => "TMux, Transport Multiplexing Protocol",
        19 => "DCN Measurement Subsystems",
        20 => "HMP, Host Monitoring Protocol",
        21 => "Packet Radio Measurement",
        22 => "XEROX NS IDP",
        23 => "Trunk-1",
        24 => "Trunk-2",
        25 => "Leaf-1",
        26 => "Leaf-2",
        27 => "RDP, Reliable Data Protocol",
        28 => "IRTP, Internet Reliable Transaction Protocol",
        29 => "ISO Transport Protocol Class 4",
        30 => "NETBLT, Network Block Transfer",
        31 => "MFE Network Services Protocol",
        32 => "MERIT Internodal Protocol",
        33 => "Sequential Exchange Protocol",
        34 => "Third Party Connect Protocol",
        35 => "IDPR, Inter-Domain Policy Routing Protocol",
        36 => "XTP, Xpress Transfer Protocol",
        37 => "Datagram Delivery Protocol",
        38 => "IDPR, Control Message Transport Protocol",
        39 => "TP++ Transport Protocol",
        40 => "IL Transport Protocol",
        41 => "IPv6 over IPv4",
        42 => "SDRP, Source Demand Routing Protocol",
        43 => "IPv6 Routing header",
        44 => "IPv6 Fragment header",
        45 => "IDRP, Inter-Domain Routing Protocol",
        46 => "RSVP, Reservation Protocol",
        47 => "GRE, General Routing Encapsulation",
        48 => "MHRP, Mobile Host Routing Protocol",
        49 => "BNA",
        50 => "ESP, Encapsulating Security Payload",
        51 => "AH, Authentication Header",
        52 => "Integrated Net Layer Security TUBA",
        53 => "IP with Encryption",
        54 => "NARP, NBMA Address Resolution Protocol",
        55 => "Minimal Encapsulation Protocol",
        56 => "TLSP, Transport Layer Security Protocol using Kryptonet key management",
        57 => "SKIP",
        58 => "ICMPv6, Internet Control Message Protocol for IPv6",
        59 => "IPv6 No Next Header",
        60 => "Destination Options for IPv6",
        61 => "Any host internal protocol",
        62 => "CFTP",
        63 => "Any local network",
        64 => "SATNET and Backroom EXPAK",
        65 => "Kryptolan",
        66 => "MIT Remote Virtual Disk Protocol",
        67 => "Internet Pluribus Packet Core",
        68 => "Any distributed file system",
        69 => "SATNET Monitoring",
        70 => "VISA Protocol",
        71 => "Internet Packet Core Utility",
        72 => "Computer Protocol Network Executive",
        73 => "Computer Protocol Heart Beat",
        74 => "Wang Span Network",
        75 => "Packet Video Protocol",
        76 => "Backroom SATNET Monitoring",
        77 => "SUN ND PROTOCOL-Temporary",
        78 => "WIDEBAND Monitoring",
        79 => "WIDEBAND EXPAK",
        80 => "ISO Internet Protocol",
        81 => "VMTP, Versatile Message Transaction Protocol",
        82 => "SECURE-VMTP",
        83 => "VINES",
        84 => "TTP",
        85 => "NSFNET-IGP",
        86 => "Dissimilar Gateway Protocol",
        87 => "TCF",
        88 => "EIGRP",
        89 => "OSPF, Open Shortest Path First Routing Protocol",
        90 => "Sprite RPC Protocol",
        91 => "Locus Address Resolution Protocol",
        92 => "MTP, Multicast Transport Protocol",
        93 => "AX.25",
        94 => "IP-within-IP Encapsulation Protocol",
        95 => "Mobile Internetworking Control Protocol",
        96 => "Semaphore Communications Sec. Pro",
        97 => "Ethernet-within-IP Encapsulation",
        98 => "Encapsulation Header",
        99 => "Any private encryption scheme",
        100 => "GMTP",
        101 => "IFMP, Ipsilon Flow Management Protocol",
        102 => "PNNI over IP",
        103 => "PIM, Protocol Independent Multicast",
        104 => "ARIS",
        105 => "SCPS",
        106 => "QNX",
        107 => "Active Networks",
        108 => "IPPCP, IP Payload Compression Protocol",
        109 => "SNP, Sitara Networks Protocol",
        110 => "Compaq Peer Protocol",
        111 => "IPX in IP",
        112 => "VRRP, Virtual Router Redundancy Protocol",
        113 => "PGM, Pragmatic General Multicast",
        114 => "any 0-hop protocol",
        115 => "L2TP, Level 2 Tunneling Protocol",
        116 => "DDX, D-II Data Exchange",
        117 => "IATP, Interactive Agent Transfer Protocol",
        118 => "ST, Schedule Transfer",
        119 => "SRP, SpectraLink Radio Protocol",
        120 => "UTI",
        121 => "SMP, Simple Message Protocol",
        122 => "SM",
        123 => "PTP, Performance Transparency Protocol",
        124 => "ISIS over IPv4",
        125 => "FIRE",
        126 => "CRTP, Combat Radio Transport Protocol",
        127 => "CRUDP, Combat Radio User Datagram",
        128 => "SSCOPMCE",
        129 => "IPLT",
        130 => "SPS, Secure Packet Shield",
        131 => "PIPE, Private IP Encapsulation within IP",
        132 => "SCTP, Stream Control Transmission Protocol",
        133 => "Fibre Channel",
        134 => "RSVP-E2E-IGNORE",
        135..=254 => "Unknown Protocol",
        255 => "Reserved",
    }
}



pub fn get_tcp_description(option: &super::TcpOption) -> &'static str {
    use super::TcpOption::*;
    match option {
        EOOL => "End of Options List",
        NOP => "No Operation",
        UntrackedOption(option_type, _) => {
            match option_type.0 {
                2 => "Maximum Segment Size",
                3 => "Window Scale",
                4 => "SACK Permitted",
                5 => "SACK",
                6 => "Echo (obsolete)",
                7 => "Echo Reply (obsolete)",
                8 => "Timestamps",
                9 => "Partial Order Connection Permitted (obsolete)",
                10 => "Partial Order Service Profile (obsolete)",
                11 => "CC (obsolete)",
                12 => "CC.NEW (obsolete)",
                13 => "CC.ECHO (obsolete)",
                14 => "TCP Alternate Checksum Request (obsolete)",
                15 => "TCP Alternate Checksum Data (obsolete)",
                16 => "Skeeter",
                17 => "Bubba",
                18 => "Trailer Checksum Option",
                19 => "MD5 Signature Option (obsolete)",
                20 => "SCPS Capabilities",
                21 => "Selective Negative Acknowledgements",
                22 => "Record Boundaries",
                23 => "Corruption experienced",
                24 => "SNAP",
                26 => "TCP Compression Filter",
                27 => "Quick-Start Response",
                28 => "User Timeout Option",
                29 => "TCP Authentication Option (TCP-AO)",
                30 => "Multipath TCP (MPTCP)",
                34 => "variable 	TCP Fast Open Cookie",
                69 => "Encryption Negotiation (TCP-ENO)",
                _ => "Unknown Option",
            }
        },
    }
}


